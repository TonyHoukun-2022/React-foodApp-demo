{"ast":null,"code":"var _jsxFileName = \"/Users/youxianhan/Desktop/React_FoodOrder/src/components/Layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport CartIcon from \"../Cart/CartIcon\";\nimport { useContext, useEffect, useState } from \"react\";\nimport styles from \"./HeaderCartButton.module.css\";\nimport CartContext from \"../../StoreContext/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  const cartctx = useContext(CartContext); // reduce is a built-in js method allows us to transform an array of data into a single value.\n\n  const numOfCartItems = cartctx.items.reduce((currentNumber, item) => {\n    return currentNumber + item.amount;\n  }, 0); //add animation 'bump' for button\n\n  const btnStyle = `${styles.button} ${styles.bump}`; //useEffect to activate the button animation whenever the cart state changes\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnStyle,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.badge,\n      children: numOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderCartButton, \"8Zjj9fJ1TTiRjwNh4QEzLIoY2S8=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/youxianhan/Desktop/React_FoodOrder/src/components/Layout/HeaderCartButton.js"],"names":["CartIcon","useContext","useEffect","useState","styles","CartContext","HeaderCartButton","props","cartctx","numOfCartItems","items","reduce","currentNumber","item","amount","btnStyle","button","bump","onClick","icon","badge"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAMC,OAAO,GAAGP,UAAU,CAACI,WAAD,CAA1B,CADkC,CAElC;;AACA,QAAMI,cAAc,GAAGD,OAAO,CAACE,KAAR,CAAcC,MAAd,CAAqB,CAACC,aAAD,EAAgBC,IAAhB,KAAyB;AACnE,WAAOD,aAAa,GAAGC,IAAI,CAACC,MAA5B;AACD,GAFsB,EAEpB,CAFoB,CAAvB,CAHkC,CAMlC;;AACA,QAAMC,QAAQ,GAAI,GAAEX,MAAM,CAACY,MAAO,IAAGZ,MAAM,CAACa,IAAK,EAAjD,CAPkC,CAQlC;;AACAf,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AACA,sBACE;AAAQ,IAAA,SAAS,EAAEa,QAAnB;AAA6B,IAAA,OAAO,EAAER,KAAK,CAACW,OAA5C;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEd,MAAM,CAACe,IAAxB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,SAAS,EAAEf,MAAM,CAACgB,KAAxB;AAAA,gBAAgCX;AAAhC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnBD;;GAAMH,gB;;KAAAA,gB;AAoBN,eAAeA,gBAAf","sourcesContent":["import CartIcon from \"../Cart/CartIcon\"\nimport { useContext, useEffect, useState } from \"react\"\nimport styles from \"./HeaderCartButton.module.css\"\nimport CartContext from \"../../StoreContext/cart-context\"\nconst HeaderCartButton = (props) => {\n  const cartctx = useContext(CartContext)\n  // reduce is a built-in js method allows us to transform an array of data into a single value.\n  const numOfCartItems = cartctx.items.reduce((currentNumber, item) => {\n    return currentNumber + item.amount\n  }, 0)\n  //add animation 'bump' for button\n  const btnStyle = `${styles.button} ${styles.bump}`\n  //useEffect to activate the button animation whenever the cart state changes\n  useEffect(() => {}, [])\n  return (\n    <button className={btnStyle} onClick={props.onClick}>\n      <span className={styles.icon}>\n        <CartIcon></CartIcon>\n      </span>\n      <span>Your cart</span>\n      <span className={styles.badge}>{numOfCartItems}</span>\n    </button>\n  )\n}\nexport default HeaderCartButton\n"]},"metadata":{},"sourceType":"module"}