{"ast":null,"code":"var _jsxFileName = \"/Users/youxianhan/Desktop/React_FoodOrder/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styles from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null); // fetching data from firebase after the comp is initially loaded or some dependency change\n  //the effect func should not return a promise, so effect func cannot be async function\n\n  useEffect(() => {\n    console.log(\"effect func\"); //the method of use async func in useEffect\n\n    const fetchMeals = async () => {\n      // get request\n      const response = await fetch(\"https://foodapp-253e6-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error(\"something is wrong\");\n      } //convert returned JSON to js obj, responseData is an obj\n\n\n      const responseData = await response.json();\n      const loadedMeals = []; // convert obj with keys into an array\n      //  for in oops through the properties of an Object:\n\n      for (let key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      } //update meals by state\n\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals();\n    } catch (error) {}\n  }, []); //return jsx if is loading\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.mealIsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    price: meal.price,\n    name: meal.name,\n    description: meal.description\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 41\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"GNhuq97CrYTRGtb4EdV+fANyLyQ=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/youxianhan/Desktop/React_FoodOrder/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","styles","Card","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","console","log","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","error","mealIsLoading","mealsList","map","meal"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C,CAH2B,CAK3B;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADc,CAEd;;AACA,UAAMC,UAAU,GAAG,YAAY;AAC7B;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACD,OAN4B,CAQ7B;;;AACA,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB,CAX6B,CAY7B;AACA;;AACA,WAAK,IAAIC,GAAT,IAAgBH,YAAhB,EAA8B;AAC5BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD,OArB4B,CAsB7B;;;AACApB,MAAAA,QAAQ,CAACc,WAAD,CAAR;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAzBD;;AA2BA,QAAI;AACFK,MAAAA,UAAU;AACX,KAFD,CAEE,OAAOc,KAAP,EAAc,CAAE;AACnB,GAjCQ,EAiCN,EAjCM,CAAT,CAP2B,CA0C3B;;AACA,MAAIpB,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEN,MAAM,CAAC2B,aAA3B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMC,SAAS,GAAGxB,KAAK,CAACyB,GAAN,CAAWC,IAAD,iBAAU,QAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,IAAI,CAACR,EAAnB;AAAqC,IAAA,KAAK,EAAEQ,IAAI,CAACL,KAAjD;AAAwD,IAAA,IAAI,EAAEK,IAAI,CAACP,IAAnE;AAAyE,IAAA,WAAW,EAAEO,IAAI,CAACN;AAA3F,KAA4BM,IAAI,CAACR,EAAjC;AAAA;AAAA;AAAA;AAAA,UAApB,CAAlB;AACA,sBACE;AAAS,IAAA,SAAS,EAAEtB,MAAM,CAACI,KAA3B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKwB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3DD;;GAAMzB,c;;KAAAA,c;AA4DN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport styles from \"./AvailableMeals.module.css\"\nimport Card from \"../UI/Card\"\nimport MealItem from \"./MealItem/MealItem\"\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [httpError, setHttpError] = useState(null)\n\n  // fetching data from firebase after the comp is initially loaded or some dependency change\n  //the effect func should not return a promise, so effect func cannot be async function\n  useEffect(() => {\n    console.log(\"effect func\")\n    //the method of use async func in useEffect\n    const fetchMeals = async () => {\n      // get request\n      const response = await fetch(\"https://foodapp-253e6-default-rtdb.firebaseio.com/meals.json\")\n\n      if (!response.ok) {\n        throw new Error(\"something is wrong\")\n      }\n\n      //convert returned JSON to js obj, responseData is an obj\n      const responseData = await response.json()\n\n      const loadedMeals = []\n      // convert obj with keys into an array\n      //  for in oops through the properties of an Object:\n      for (let key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        })\n      }\n      //update meals by state\n      setMeals(loadedMeals)\n      setIsLoading(false)\n    }\n\n    try {\n      fetchMeals()\n    } catch (error) {}\n  }, [])\n\n  //return jsx if is loading\n  if (isLoading) {\n    return (\n      <section className={styles.mealIsLoading}>\n        <p>loading...</p>\n      </section>\n    )\n  }\n\n  const mealsList = meals.map((meal) => <MealItem id={meal.id} key={meal.id} price={meal.price} name={meal.name} description={meal.description}></MealItem>)\n  return (\n    <section className={styles.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  )\n}\nexport default AvailableMeals\n"]},"metadata":{},"sourceType":"module"}