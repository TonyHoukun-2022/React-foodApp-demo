{"ast":null,"code":"var _jsxFileName = \"/Users/youxianhan/Desktop/React_FoodOrder/src/StoreContext/CartProvider.js\",\n    _s = $RefreshSig$();\n\n// this component is simply to manage the current context of cart data and provide that context to all components that want access to it.\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\"; //reducer function can put outside of component because no interval values of the CartProvider component is needed in reducer.\n//receive a state object and an action automatically by React.\n// The action is dispatched by\n// state is simply the last state snapshotof the state managed by the reducer func.\n// And then as part of the reducer function,\n// you have to return a new state snapshot.\n//initial the cartstate\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  // return the newest cartstate\n  return cartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  //初始化cartstate作为初始值\n  const [cartSt] = useReducer(cartReducer, cartState);\n\n  const addItemToCartHandler = item => {};\n\n  const removeItemFromCartHandler = id => {};\n\n  const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"TVbkSXsAeGA4II1tG8l1PhE7pm8=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/youxianhan/Desktop/React_FoodOrder/src/StoreContext/CartProvider.js"],"names":["CartContext","useReducer","cartState","items","totalAmount","cartReducer","state","action","CartProvider","props","cartSt","addItemToCartHandler","item","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA;AACA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,WAAW,EAAE;AAFG,CAAlB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC;AACA,SAAOL,SAAP;AACD,CAHD;;AAIA,MAAMM,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B;AACA,QAAM,CAACC,MAAD,IAAWT,UAAU,CAACI,WAAD,EAAcH,SAAd,CAA3B;;AACA,QAAMS,oBAAoB,GAAIC,IAAD,IAAU,CAAE,CAAzC;;AACA,QAAMC,yBAAyB,GAAIC,EAAD,IAAQ,CAAE,CAA5C;;AACA,QAAMC,WAAW,GAAG;AAClBZ,IAAAA,KAAK,EAAE,EADW;AAElBC,IAAAA,WAAW,EAAE,CAFK;AAGlBY,IAAAA,OAAO,EAAEL,oBAHS;AAIlBM,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cAA2CN,KAAK,CAACS;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZD;;GAAMV,Y;;KAAAA,Y;AAaN,eAAeA,YAAf","sourcesContent":["// this component is simply to manage the current context of cart data and provide that context to all components that want access to it.\nimport CartContext from \"./cart-context\"\nimport { useReducer } from \"react\"\n\n//reducer function can put outside of component because no interval values of the CartProvider component is needed in reducer.\n//receive a state object and an action automatically by React.\n\n// The action is dispatched by\n// state is simply the last state snapshotof the state managed by the reducer func.\n// And then as part of the reducer function,\n// you have to return a new state snapshot.\n\n//initial the cartstate\nconst cartState = {\n  items: [],\n  totalAmount: 0,\n}\nconst cartReducer = (state, action) => {\n  // return the newest cartstate\n  return cartState\n}\nconst CartProvider = (props) => {\n  //初始化cartstate作为初始值\n  const [cartSt] = useReducer(cartReducer, cartState)\n  const addItemToCartHandler = (item) => {}\n  const removeItemFromCartHandler = (id) => {}\n  const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  }\n  return <CartContext.Provider value={cartContext}>{props.children}</CartContext.Provider>\n}\nexport default CartProvider\n"]},"metadata":{},"sourceType":"module"}