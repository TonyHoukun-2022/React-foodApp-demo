{"ast":null,"code":"var _jsxFileName = \"/Users/youxianhan/Desktop/React_FoodOrder/src/components/Layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport CartIcon from \"../Cart/CartIcon\";\nimport { useContext, useEffect, useState } from \"react\";\nimport styles from \"./HeaderCartButton.module.css\";\nimport CartContext from \"../../StoreContext/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  const [btnIsHighLighted, setBtnIsHighLighted] = useState(false);\n  const cartctx = useContext(CartContext);\n  const {\n    items\n  } = cartctx; // reduce is a built-in js method allows us to transform an array of data into a single value.\n\n  const numOfCartItems = items.reduce((currentNumber, item) => {\n    return currentNumber + item.amount;\n  }, 0); //if btnIsHighlighted is true, add animation 'bump' for button\n\n  const btnStyle = `${styles.button} ${btnIsHighLighted ? styles.bump : \"\"} `; //useEffect to activate the button animation whenever the cart state changes\n\n  useEffect(() => {\n    // if there is no item in cart, setBtnIsHighLighted will not be set true\n    if (items.length === 0) {\n      return;\n    } //after the animation bump play 300ms, remove the bump animation of the button for the next cycle\n\n\n    setTimeout();\n    setBtnIsHighLighted(true);\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnStyle,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.badge,\n      children: numOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderCartButton, \"8Rx5CkIw8ap1vcGETiVSKXz1e0Y=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/youxianhan/Desktop/React_FoodOrder/src/components/Layout/HeaderCartButton.js"],"names":["CartIcon","useContext","useEffect","useState","styles","CartContext","HeaderCartButton","props","btnIsHighLighted","setBtnIsHighLighted","cartctx","items","numOfCartItems","reduce","currentNumber","item","amount","btnStyle","button","bump","length","setTimeout","onClick","icon","badge"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAMO,OAAO,GAAGT,UAAU,CAACI,WAAD,CAA1B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYD,OAAlB,CAHkC,CAIlC;;AACA,QAAME,cAAc,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACC,aAAD,EAAgBC,IAAhB,KAAyB;AAC3D,WAAOD,aAAa,GAAGC,IAAI,CAACC,MAA5B;AACD,GAFsB,EAEpB,CAFoB,CAAvB,CALkC,CAQlC;;AACA,QAAMC,QAAQ,GAAI,GAAEb,MAAM,CAACc,MAAO,IAAGV,gBAAgB,GAAGJ,MAAM,CAACe,IAAV,GAAiB,EAAG,GAAzE,CATkC,CAUlC;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIS,KAAK,CAACS,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACD,KAJa,CAKd;;;AACAC,IAAAA,UAAU;AACVZ,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GARQ,EAQN,CAACE,KAAD,CARM,CAAT;AASA,sBACE;AAAQ,IAAA,SAAS,EAAEM,QAAnB;AAA6B,IAAA,OAAO,EAAEV,KAAK,CAACe,OAA5C;AAAA,4BACE;AAAM,MAAA,SAAS,EAAElB,MAAM,CAACmB,IAAxB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,SAAS,EAAEnB,MAAM,CAACoB,KAAxB;AAAA,gBAAgCZ;AAAhC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7BD;;GAAMN,gB;;KAAAA,gB;AA8BN,eAAeA,gBAAf","sourcesContent":["import CartIcon from \"../Cart/CartIcon\"\nimport { useContext, useEffect, useState } from \"react\"\nimport styles from \"./HeaderCartButton.module.css\"\nimport CartContext from \"../../StoreContext/cart-context\"\nconst HeaderCartButton = (props) => {\n  const [btnIsHighLighted, setBtnIsHighLighted] = useState(false)\n  const cartctx = useContext(CartContext)\n  const { items } = cartctx\n  // reduce is a built-in js method allows us to transform an array of data into a single value.\n  const numOfCartItems = items.reduce((currentNumber, item) => {\n    return currentNumber + item.amount\n  }, 0)\n  //if btnIsHighlighted is true, add animation 'bump' for button\n  const btnStyle = `${styles.button} ${btnIsHighLighted ? styles.bump : \"\"} `\n  //useEffect to activate the button animation whenever the cart state changes\n  useEffect(() => {\n    // if there is no item in cart, setBtnIsHighLighted will not be set true\n    if (items.length === 0) {\n      return\n    }\n    //after the animation bump play 300ms, remove the bump animation of the button for the next cycle\n    setTimeout()\n    setBtnIsHighLighted(true)\n  }, [items])\n  return (\n    <button className={btnStyle} onClick={props.onClick}>\n      <span className={styles.icon}>\n        <CartIcon></CartIcon>\n      </span>\n      <span>Your cart</span>\n      <span className={styles.badge}>{numOfCartItems}</span>\n    </button>\n  )\n}\nexport default HeaderCartButton\n"]},"metadata":{},"sourceType":"module"}